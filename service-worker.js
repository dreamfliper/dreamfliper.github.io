"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["dreamfliper.github.io/index.html","e26cc0b0281838fa9c71b85a7a639616"],["dreamfliper.github.io/static/css/main.1b1c16cd.css","adf1c533912f8f1271ef616c8af75531"],["dreamfliper.github.io/static/js/0.d6da7883.chunk.js","7d23b348ff9e4c61cf15bd8b20673f8a"],["dreamfliper.github.io/static/js/1.f110ca95.chunk.js","fc11fc58c5c4d5c2d00282f00455e2a9"],["dreamfliper.github.io/static/js/2.693491e3.chunk.js","6b81c4c8e8ab2af017007460c90cfbd1"],["dreamfliper.github.io/static/js/3.87ba422b.chunk.js","f0cd2ca2d5f7b3e18c8b354fb6987cd2"],["dreamfliper.github.io/static/js/4.8f4fa1d8.chunk.js","508cbd0dfeb8dbbacd67323c6c87943b"],["dreamfliper.github.io/static/js/main.b3ea771b.js","06a6d2f1dd839da1f991613b23e04f72"],["dreamfliper.github.io/static/media/BLEController.a374b1ec.png","a374b1ec54548d399263b2609efecae4"],["dreamfliper.github.io/static/media/flashlight.debd5328.png","debd53280b65be21669d3bfbc81d71dc"],["dreamfliper.github.io/static/media/fontawesome-webfont.674f50d2.eot","674f50d287a8c48dc19ba404d20fe713"],["dreamfliper.github.io/static/media/fontawesome-webfont.912ec66d.svg","912ec66d7572ff821749319396470bde"],["dreamfliper.github.io/static/media/fontawesome-webfont.af7ae505.woff2","af7ae505a9eed503f8b8e6982036873e"],["dreamfliper.github.io/static/media/fontawesome-webfont.b06871f2.ttf","b06871f281fee6b241d60582ae9369b9"],["dreamfliper.github.io/static/media/fontawesome-webfont.fee66e71.woff","fee66e712a8a08eef5805a46892932ad"],["dreamfliper.github.io/static/media/subTrans.bb0ea8ff.png","bb0ea8ff1057d35ca0ca5422466725f3"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,r){var n=new URL(e);return r&&n.pathname.match(r)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],r=new URL(t,self.location),n=createCacheKey(r,hashParamName,a,/\.\w{8}\./);return[r.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var r=new Request(a,{credentials:"same-origin"});return fetch(r).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("dreamfliper.github.io/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});